original code


import { Avatar, Box, Button, IconButton, Typography } from "@mui/material";
import { useauth } from "../context/authcontex";
import { red } from "@mui/material/colors";
import ChatItem from "../components/chatitem";
import { IoMdSend } from "react-icons/io";
import { useRef, useState } from "react";
import { sendchatrequest } from "../helper/apicommunicators";
type message={
    role:"user" | "assistant"
    content:string
}
/*
const chatmessages = [
  {
    role: "user",
    content: "Hello! What can you do?",
  },
  {
    role: "system",
    content: "You are a helpful AI assistant.",
  },
  {
    role: "user",
    content: "Hello! What can you do?",
  },
  {
    role: "assistant",
    content: "I can help you with programming, writing, math problems, and more!",
  },
  {
    role: "user",
    content: "Can you explain the concept of recursion?",
  },
  {
    role: "assistant",
    content: "Recursion is a programming technique where a function calls itself to solve smaller instances of a problem.",
  },
];
*/

const Chat=()=>{
    const inputref=useRef<HTMLTextAreaElement | null>(null)
    const auth=useauth()
    const [chatmessages, setChatMessages] =useState<message[]>([])
    const handlesubmit=async ()=> {
        const content=inputref.current?.value as string
        if(inputref && inputref.current){
            inputref.current.value=""
        }
        const newMessage: message = {role:"user", content};
        setChatMessages((prev)=>[...prev, newMessage]);
        const chatdata=await sendchatrequest(content)
        setChatMessages([...chatdata.chats])
    }
    return ( 
    <Box sx={{display:"flex", flex:1, width:"100%", mt:3, gap:3    }}>
        <Box sx={{display:{md:"flex", xs:"none",sm:"none"}, flex:0.2, flexDirection:"column"}}>
            <Box sx={{display:"flex", width:"100%", height:"80vh", bgcolor:"#1E1E1E", borderRadius:5, flexDirection:"column",mx:3 }}>
                <Avatar sx={{mx:"auto", my:2, bgcolor:"skyblue", color:"white", fontWeight:700}}>
                    {auth?.user?.name[0] }
                    {auth?.user?.name.split("")[1][0]}
                </Avatar> 
                <Typography sx={{mx:"auto", fontFamily:"wokr sans"}}>
                    Hello! How can i help you!
                </Typography>
                <Typography sx={{mx:"auto", fontFamily:"wokr sans", my:4, p:3}}>
                    Ask anything, that is related to knowledge, business, advices, education, etc.
                </Typography>
                <Button sx={{width:"200px", my:"auto", color:"white", fontWeight:"700", borderRadius:5, mx:"auto", bgcolor:red[300], ":hover": {bgcolor:red.A400 } }}>Clear Conversation</Button>
            </Box>     
        </Box> 
        <Box sx={{display:"flex",flex:{md:0.8,xs:1,sm:1}, flexDirection:"column",px:3,fontWeight:"800", }}>
            <Typography sx={{fontSize:"40px",color:"white",mb:2, mx:"auto"}}>Model-GPT 4.0 Turbo</Typography>
            <Box sx={{width:"100%",height:"60vh",borderRadius:5,mx:"auto",display:"flex",flexDirection:"column",overflow:"scroll",overflowX:"hidden",overflowY:"auto",scrollBehavior:"smooth",pr:1}}>
                {chatmessages.map((chat, index) => (
                    //@ts-ignore
                   <ChatItem content={chat.content} role={chat.role} key={index} />
                ))}
            </Box>
            <Box
  sx={{
    width: "100%",
    borderRadius: "15px",
    backgroundColor: "#1E1E1E",
    display: "flex",
    alignItems: "center",
    mt: 2,
    px: 2,
    py: 1,
  }}
>
  <textarea
    ref={inputref}
    rows={1}
    placeholder="Type your text..."
    onInput={(e) => {
      e.currentTarget.style.height = "auto";
      e.currentTarget.style.height = `${e.currentTarget.scrollHeight}px`;
    }}
    style={{
      width: "100%",
      backgroundColor: "transparent",
      padding: "10px",
      border: "none",
      outline: "none",
      color: "white",
      fontSize: "18px",
      resize: "none",
      overflow: "hidden",
      lineHeight: "1.4em",
      fontFamily: "inherit",
    }}
  ></textarea>
  <IconButton onClick={handlesubmit} sx={{ color: "white", ml: 1 }}>
    <IoMdSend />
  </IconButton>
</Box>

            
        </Box>
    </Box>
    );
}
export default Chat;